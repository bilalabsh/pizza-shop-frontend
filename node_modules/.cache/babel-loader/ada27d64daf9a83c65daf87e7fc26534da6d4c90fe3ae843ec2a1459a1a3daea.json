{"ast":null,"code":"// src/axiosConfig.js\nimport axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001'\n});\ninstance.interceptors.request.use(config => {\n  // You can add headers or modify the request config here\n  console.log('Request Interceptor:', config);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(response => {\n  console.log('Response Interceptor:', response);\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","console","log","error","Promise","reject","response"],"sources":["C:/Users/Bilal/Desktop/folio/sheyPizza/my_app/src/Config/axiosConfig.js"],"sourcesContent":["// src/axiosConfig.js\r\nimport axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:3001',\r\n});\r\n\r\n\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    // You can add headers or modify the request config here\r\n    console.log('Request Interceptor:', config);\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  response => {\r\n   \r\n    console.log('Response Interceptor:', response);\r\n    return response;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;AAGFF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAI;EACR;EACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;EAC3C,OAAOA,MAAM;AACf,CAAC,EACDG,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDT,QAAQ,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAChCO,QAAQ,IAAI;EAEVL,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,QAAQ,CAAC;EAC9C,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}